const { InlineKeyboard } = require("grammy");
const { Group } = require("../models/groupModel");

const adminId = "1018007612"; // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è

async function handleGroupSelection(ctx) {
  const userId = String(ctx.callbackQuery.from.id);

  try {
    const groupWithId = await Group.find({});
    if (groupWithId.length === 0) {
      await ctx.reply("ü§î –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø.");
      return; 
    }
    ctx.session.selectedGroupId = String(groupWithId._id);
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    const rows = groupWithId.map((group) => [
      {
        text: `–ì—Ä—É–ø–ø–∞ ${group.title}`,
        callback_data:
          userId === adminId
            ? `message_${group._id}` // –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            : `events_${group._id}`, // –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      },
    ]);

    const groupKeyboard = new InlineKeyboard(rows);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await ctx.reply("üìã –í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É:", {
      reply_markup: groupKeyboard,
    });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥—Ä—É–ø–ø:", error);
    await ctx.reply("üö® –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥—Ä—É–ø–ø.");
  }
}

module.exports = { handleGroupSelection };
