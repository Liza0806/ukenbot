require("dotenv").config();
const mongoose = require("mongoose");
const { Bot, session } = require("grammy");

const { registerCommand, start } = require("./commands/start");
const { groupsCommand } = require("./commands/groups");
const { handleGroupSelection } = require("./handlers/handleGroupSelection");
const { handleTextMessages } = require("./handlers/textMessages");
const { yesHandler } = require("./handlers/yesHandler");
const { noHandler } = require("./handlers/noHandler");
const { handleBotError } = require("./handlers/errorHandler");
const { showMainMenu } = require("./commands/showMainMenu");

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
mongoose.connect(process.env.DB_HOST);

const bot = new Bot(process.env.BOT_API_KEY);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–π
bot.use(session({ initial: () => ({}) }));

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
bot.command("register", registerCommand);

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã
bot.hears("üîç –í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É", handleGroupSelection);

bot.command("start", start);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
bot.on("callback_query:data", async (ctx) => {
  const data = ctx.callbackQuery.data;

  if (data === "register") {
    await registerCommand(ctx);
  } else if (data === "startwork") {
    await showMainMenu(ctx);
  } else if (data.startsWith("{")) {
    try {
      const parsedData = JSON.parse(data);

      if (parsedData.id && parsedData.title) {
        await groupsCommand(ctx);
      } else {
        await ctx.reply("Invalid JSON format.");
      }
    } catch (error) {
      console.error("Error parsing JSON:", error);
      await ctx.reply("Error processing data.");
    }
  } else if (data === "accept_training") {
    await yesHandler(ctx);
  } else if (data === "cancel_training") {
    await noHandler(ctx);
  } else {
    await ctx.reply("Unknown command or data format.");
  }
});

bot.callbackQuery("cancel_training", noHandler);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message:text", handleTextMessages);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch(handleBotError);

bot.start();
module.exports = bot;
